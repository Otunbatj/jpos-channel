package ng.tegritech.jposclient.packager

import org.jpos.iso.*
import org.jpos.util.Logger

class PostBridgePackager() : ISOBasePackager() {
    protected var p127 = PostPrivatePackager()
    protected lateinit var fld: Array<ISOFieldPackager>

    init {
        this.fld = arrayOf<ISOFieldPackager>(
            IFA_NUMERIC(4, "MESSAGE TYPE INDICATOR"),
            IFB_BITMAP(16, "BIT MAP"),
            IFA_LLNUM(19, "PAN - PRIMARY ACCOUNT NUMBER"),
            IFA_NUMERIC(6, "PROCESSING CODE"),
            IFA_NUMERIC(12, "AMOUNT, TRANSACTION"),
            IFA_NUMERIC(12, "AMOUNT, SETTLEMENT"),
            IFA_NUMERIC(12, "AMOUNT, CARDHOLDER BILLING"),
            IFA_NUMERIC(10, "TRANSMISSION DATE AND TIME"),
            IFA_NUMERIC(8, "AMOUNT, CARDHOLDER BILLING FEE"),
            IFA_NUMERIC(8, "CONVERSION RATE, SETTLEMENT"),
            IFA_NUMERIC(8, "CONVERSION RATE, CARDHOLDER BILLING"),
            IFA_NUMERIC(6, "SYSTEM TRACE AUDIT NUMBER"),
            IFA_NUMERIC(6, "TIME, LOCAL TRANSACTION"),
            IFA_NUMERIC(4, "DATE, LOCAL TRANSACTION"),
            IFA_NUMERIC(4, "DATE, EXPIRATION"),
            IFA_NUMERIC(4, "DATE, SETTLEMENT"),
            IFA_NUMERIC(4, "DATE, CONVERSION"),
            IFA_NUMERIC(4, "DATE, CAPTURE"),
            IFA_NUMERIC(4, "MERCHANTS TYPE"),
            IFA_NUMERIC(3, "ACQUIRING INSTITUTION COUNTRY CODE"),
            IFA_NUMERIC(3, "PAN EXTENDED COUNTRY CODE"),
            IFA_NUMERIC(3, "FORWARDING INSTITUTION COUNTRY CODE"),
            IFA_NUMERIC(3, "POINT OF SERVICE ENTRY MODE"),
            IFA_NUMERIC(3, "CARD SEQUENCE NUMBER"),
            IFA_NUMERIC(3, "NETWORK INTERNATIONAL IDENTIFIEER"),
            IFA_NUMERIC(2, "POINT OF SERVICE CONDITION CODE"),
            IFA_NUMERIC(2, "POINT OF SERVICE PIN CAPTURE CODE"),
            IFA_NUMERIC(1, "AUTHORIZATION IDENTIFICATION RESP LEN"),
            IFA_AMOUNT(9, "AMOUNT, TRANSACTION FEE"),
            IFA_AMOUNT(9, "AMOUNT, SETTLEMENT FEE"),
            IFA_AMOUNT(9, "AMOUNT, TRANSACTION PROCESSING FEE"),
            IFA_AMOUNT(9, "AMOUNT, SETTLEMENT PROCESSING FEE"),
            IFA_LLNUM(11, "ACQUIRING INSTITUTION IDENT CODE"),
            IFA_LLNUM(11, "FORWARDING INSTITUTION IDENT CODE"),
            IFA_LLCHAR(28, "PAN EXTENDED"),
            IFA_LLNUM(37, "TRACK 2 DATA"),
            IFA_LLLCHAR(104, "TRACK 3 DATA"),
            IF_CHAR(12, "RETRIEVAL REFERENCE NUMBER"),
            IF_CHAR(6, "AUTHORIZATION IDENTIFICATION RESPONSE"),
            IF_CHAR(2, "RESPONSE CODE"),
            IF_CHAR(3, "SERVICE RESTRICTION CODE"),
            IF_CHAR(8, "CARD ACCEPTOR TERMINAL IDENTIFICACION"),
            IF_CHAR(15, "CARD ACCEPTOR IDENTIFICATION CODE"),
            IF_CHAR(40, "CARD ACCEPTOR NAME/LOCATION"),
            IFA_LLCHAR(25, "ADITIONAL RESPONSE DATA"),
            IFA_LLCHAR(76, "TRACK 1 DATA"),
            IFA_LLLCHAR(999, "ADITIONAL DATA - ISO"),
            IFA_LLLCHAR(999, "ADITIONAL DATA - NATIONAL"),
            IFA_LLLCHAR(999, "ADITIONAL DATA - PRIVATE"),
            IF_CHAR(3, "CURRENCY CODE, TRANSACTION"),
            IF_CHAR(3, "CURRENCY CODE, SETTLEMENT"),
            IF_CHAR(3, "CURRENCY CODE, CARDHOLDER BILLING"),
            IFB_BINARY(8, "PIN DATA"),
            IFB_BINARY(48, "SECURITY RELATED CONTROL INFORMATION"),
            IFA_LLLCHAR(120, "ADDITIONAL AMOUNTS"),
            IFA_LLLCHAR(999, "RESERVED ISO"),
            IFA_LLLCHAR(999, "RESERVED ISO"),
            IFA_LLLCHAR(999, "RESERVED NATIONAL"),
            IFA_LLLCHAR(999, "RESERVED NATIONAL"),
            IFA_LLLCHAR(999, "RESERVED NATIONAL"),
            IFA_LLLCHAR(999, "RESERVED PRIVATE"),
            IFA_LLLCHAR(999, "RESERVED PRIVATE"),
            IFA_LLLCHAR(999, "RESERVED PRIVATE"),
            IFA_LLLCHAR(999, "RESERVED PRIVATE"),
            IFA_BINARY(8, "MESSAGE AUTHENTICATION CODE FIELD"),
            IFA_BINARY(8, "BITMAP, EXTENDED"),
            IFA_NUMERIC(1, "SETTLEMENT CODE"),
            IFA_NUMERIC(2, "EXTENDED PAYMENT CODE"),
            IFA_NUMERIC(3, "RECEIVING INSTITUTION COUNTRY CODE"),
            IFA_NUMERIC(3, "SETTLEMENT INSTITUTION COUNTRY CODE"),
            IFA_NUMERIC(3, "NETWORK MANAGEMENT INFORMATION CODE"),
            IFA_NUMERIC(4, "MESSAGE NUMBER"),
            IFA_NUMERIC(4, "MESSAGE NUMBER LAST"),
            IFA_NUMERIC(6, "DATE ACTION"),
            IFA_NUMERIC(10, "CREDITS NUMBER"),
            IFA_NUMERIC(10, "CREDITS REVERSAL NUMBER"),
            IFA_NUMERIC(10, "DEBITS NUMBER"),
            IFA_NUMERIC(10, "DEBITS REVERSAL NUMBER"),
            IFA_NUMERIC(10, "TRANSFER NUMBER"),
            IFA_NUMERIC(10, "TRANSFER REVERSAL NUMBER"),
            IFA_NUMERIC(10, "INQUIRIES NUMBER"),
            IFA_NUMERIC(10, "AUTHORIZATION NUMBER"),
            IFA_NUMERIC(12, "CREDITS, PROCESSING FEE AMOUNT"),
            IFA_NUMERIC(12, "CREDITS, TRANSACTION FEE AMOUNT"),
            IFA_NUMERIC(12, "DEBITS, PROCESSING FEE AMOUNT"),
            IFA_NUMERIC(12, "DEBITS, TRANSACTION FEE AMOUNT"),
            IFA_NUMERIC(16, "CREDITS, AMOUNT"),
            IFA_NUMERIC(16, "CREDITS, REVERSAL AMOUNT"),
            IFA_NUMERIC(16, "DEBITS, AMOUNT"),
            IFA_NUMERIC(16, "DEBITS, REVERSAL AMOUNT"),
            IFA_NUMERIC(42, "ORIGINAL DATA ELEMENTS"),
            IF_CHAR(1, "FILE UPDATE CODE"),
            IF_CHAR(2, "FILE SECURITY CODE"),
            IF_CHAR(5, "RESPONSE INDICATOR"),
            IF_CHAR(7, "SERVICE INDICATOR"),
            IF_CHAR(42, "REPLACEMENT AMOUNTS"),
            IFA_BINARY(8, "MESSAGE SECURITY CODE"),
            IFA_AMOUNT(17, "AMOUNT, NET SETTLEMENT"),
            IF_CHAR(25, "PAYEE"),
            IFA_LLNUM(11, "SETTLEMENT INSTITUTION IDENT CODE"),
            IFA_LLNUM(11, "RECEIVING INSTITUTION IDENT CODE"),
            IFA_LLCHAR(17, "FILE NAME"),
            IFA_LLCHAR(28, "ACCOUNT IDENTIFICATION 1"),
            IFA_LLCHAR(28, "ACCOUNT IDENTIFICATION 2"),
            IFA_LLLCHAR(100, "TRANSACTION DESCRIPTION"),
            IFA_LLLCHAR(999, "RESERVED ISO USE"),
            IFA_LLLCHAR(999, "RESERVED ISO USE"),
            IFA_LLLCHAR(999, "RESERVED ISO USE"),
            IFA_LLLCHAR(999, "RESERVED ISO USE"),
            IFA_LLLCHAR(999, "RESERVED ISO USE"),
            IFA_LLLCHAR(999, "RESERVED ISO USE"),
            IFA_LLLCHAR(999, "RESERVED ISO USE"),
            IFA_LLLCHAR(999, "RESERVED NATIONAL USE"),
            IFA_LLLCHAR(999, "RESERVED NATIONAL USE"),
            IFA_LLLCHAR(999, "RESERVED NATIONAL USE"),
            IFA_LLLCHAR(999, "RESERVED NATIONAL USE"),
            IFA_LLLCHAR(999, "RESERVED NATIONAL USE"),
            IFA_LLLCHAR(999, "RESERVED NATIONAL USE"),
            IFA_LLLCHAR(999, "RESERVED NATIONAL USE"),
            IFA_LLLCHAR(999, "RESERVED NATIONAL USE"),
            IFA_LLLCHAR(999, "RESERVED PRIVATE USE"),
            IFA_LLLCHAR(999, "RESERVED PRIVATE USE"),
            IFA_LLLCHAR(999, "RESERVED PRIVATE USE"),
            IFA_LLLCHAR(999, "RESERVED PRIVATE USE"),
            IFA_LLLCHAR(999, "RESERVED PRIVATE USE"),
            IFA_LLLCHAR(999, "RESERVED PRIVATE USE"),
            IFA_LLLCHAR(999, "RESERVED PRIVATE USE"),
            ISOMsgFieldPackager(
                IFA_LLLLLLBINARY(99999, "RESERVED PRIVATE USE"),
                p127
            ),
            IFA_LLLCHAR(999, "MAC 2")
        )
        this.setFieldPackager(this.fld)
    }

    override fun setLogger(logger: Logger?, realm: String) {
        super.setLogger(logger, realm)
        p127.setLogger(logger, "$realm.PostPrivatePackager")
    }


    protected class PostPrivatePackager : ISOBasePackager() {
        protected var fld127 = arrayOf<ISOFieldPackager>(
            IF_CHAR(0, "PLACEHOLDER"),
            IFB_BITMAP(8, "BITMAP"),
            IFA_LLCHAR(32, "SWITCH KEY"),
            IF_CHAR(48, "ROUTING INFORMATION"),
            IF_CHAR(22, "POS DATA"),
            IF_CHAR(73, "SERVICE STATION DATA"),
            IFA_NUMERIC(2, "AUTHORIZATION PROFILE"),
            IFA_LLCHAR(50, "CHECK DATA"),
            IFA_LLLCHAR(128, "RETENTION DATA"),
            IFA_LLLCHAR(255, "ADDITIONAL NODE DATA"),
            IFA_NUMERIC(3, "CVV2"),
            IFA_LLCHAR(32, "ORIGINAL KEY"),
            IFA_LLCHAR(25, "TERMINAL OWNDER"),
            IF_CHAR(17, "POS GEOGRAPHIC DATA"),
            IF_CHAR(8, "SPONSOR BANK"),
            IFA_LLCHAR(29, "AVS REQUEST"),
            IF_CHAR(1, "AVS RESPONSE"),
            IFA_LLCHAR(50, "CARDHOLDER INFORMATION"),
            IFA_LLCHAR(50, "VALIDATION DATA"),
            IF_CHAR(31, "BANK DETAILS"),
            IFA_NUMERIC(8, "AUTHORIZER DATE SETTLEMENT"),
            IFA_LLCHAR(12, "RECORD IDENTIFICATION"),
            IFA_LLLLLCHAR(99999, "STRUCTURED DATA"),
            IF_CHAR(253, "PAYEE NAME AND ADDRESS"),
            IFA_LLCHAR(28, "PAYER ACCOUNT INFORMATION"),
            IFA_LLLLCHAR(8000, "ICC DATA"),
            IFA_LLCHAR(12, "ORIGINAL NODE"),
            IF_CHAR(1, "CARD VERIFICATION RESULT"),
            IFA_NUMERIC(4, "AMERICAN EXPRESS CARD IDENTIFIER"),
            IFB_BINARY(40, "3D SECURE DATA"),
            IF_CHAR(1, "3D SECURE RESULT"),
            IFA_LLCHAR(11, "ISSUER NETWORK ID"),
            IFB_LLBINARY(33, "UCAF DATA"),
            IFA_NUMERIC(4, "EXTENDED TRANSACTION TYPE"),
            IFA_NUMERIC(2, "ACCOUNT TYPE QUALIFIERS"),
            IFA_LLCHAR(11, "ACQUIRER NETWORK ID"),
            IFA_LLCHAR(25, "CUSTOMER ID"),
            IF_CHAR(4, "EXTENDED RESPONSE CODE"),
            IFA_LLCHAR(99, "ADDITIONAL POS DATA CODE"),
            IF_CHAR(2, "ORIGINAL RESPONSE CODE")
        )

        init {
            this.setFieldPackager(fld127)
        }
    }

}